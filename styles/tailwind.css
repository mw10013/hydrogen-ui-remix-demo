@tailwind base;
@tailwind components;
@tailwind utilities;

/* Tokens */
:root {
  --color-primary: 20 20 20; /* Text, buttons, etc. */
  --color-contrast: 250 250 249; /* Backgrounds, borders, etc. */
  --color-accent: 191 72 0; /* Labels like "On sale" */
  --font-size-fine: 0.75rem; /* text-xs */
  --font-size-copy: 1rem; /* text-base */
  --font-size-lead: 1.125rem; /* text-lg */
  --font-size-heading: 2rem; /* text-2xl */
  --font-size-display: 3rem; /* text-4xl */
  --color-shop-pay: #5a31f4;
  --shop-pay-button--width: 100%; /* Sets the width for the shop-pay-button web component */
  --height-nav: 3rem;
  --screen-height: 100vh;
  --screen-height-dynamic: 100vh;

  @media (min-width: 32em) {
    --height-nav: 4rem;
  }
  @media (min-width: 48em) {
    --height-nav: 6rem;
    --font-size-heading: 2.25rem; /* text-4xl */
    --font-size-display: 3.75rem; /* text-6xl */
  }
  @supports (height: 100svh) {
    --screen-height: 100svh;
  }
  @supports (height: 100dvh) {
    --screen-height-dynamic: 100dvh;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-primary: 250 250 250;
    --color-contrast: 32 33 36;
    --color-accent: 235 86 40;
  }
}

@keyframes fadeInAnimation {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

shop-pay-button {
  width: 100%;
  height: 3rem;
  display: table;
}

@layer base {
  * {
    font-variant-ligatures: none;
  }

  body {
    @apply antialiased text-primary/90 bg-contrast border-primary/10;
    /* @apply antialiased border-primary/10; */
  }

  html {
    scroll-padding-top: 10rem;
  }

  model-viewer::part(default-progress-mask) {
    display: none;
  }

  model-viewer::part(default-progress-bar) {
    display: none;
  }

  input[type="search"]::-webkit-search-decoration,
  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-results-button,
  input[type="search"]::-webkit-search-results-decoration {
    -webkit-appearance: none;
  }

  /* .prose {
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      &:first-child {
        @apply mt-0;
      }
    }
  }
} */

  .prose h1:first-child, .prose h2:first-child, .prose h3:first-child, .prose h4:first-child, .prose h5:first-child, .prose h6:first-child {
    margin-top: 0px;
  }
}

@layer components {
  /* .article {
    h2,
    h3,
    h4,
    h5,
    h6 {
      @apply font-sans text-primary;
    }
    @apply mb-12 font-serif prose mx-auto grid justify-center text-primary;
    p,
    ul,
    li {
      @apply mb-4 text-lg;
    }
    img {
      @apply md:-mx-8 lg:-mx-16;

      @media (min-width: 48em) {
        width: calc(100% + 4rem);
        max-width: 100vw;
      }
      @media (min-width: 64em) {
        width: calc(100% + 8rem);
      }
    }
  } */

  .article h2,
  .article h3,
  .article h4,
  .article h5,
  .article h6{
    font-family: Helvetica Neue, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;
    --tw-text-opacity: 1;
    color: rgba(20, 20, 20, var(--tw-text-opacity));
    color: rgb(var(--color-primary) / var(--tw-text-opacity));
  }
  .article h1:first-child,.article h2:first-child,.article h3:first-child,.article h4:first-child,.article h5:first-child,.article h6:first-child{
    margin-top: 0px;
  }
  .article{
    color: var(--tw-prose-body);
    max-width: 65ch;
  }
  .article :where([class~="lead"]):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }
  .article :where(a):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
  }
  .article :where(strong):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .article :where(a strong):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .article :where(blockquote strong):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .article :where(thead th strong):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .article :where(ol):not(:where([class~="not-prose"] *)){
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }
  .article :where(ol[type="A"]):not(:where([class~="not-prose"] *)){
    list-style-type: upper-alpha;
  }
  .article :where(ol[type="a"]):not(:where([class~="not-prose"] *)){
    list-style-type: lower-alpha;
  }
  .article :where(ol[type="A" s]):not(:where([class~="not-prose"] *)){
    list-style-type: upper-alpha;
  }
  .article :where(ol[type="a" s]):not(:where([class~="not-prose"] *)){
    list-style-type: lower-alpha;
  }
  .article :where(ol[type="I"]):not(:where([class~="not-prose"] *)){
    list-style-type: upper-roman;
  }
  .article :where(ol[type="i"]):not(:where([class~="not-prose"] *)){
    list-style-type: lower-roman;
  }
  .article :where(ol[type="I" s]):not(:where([class~="not-prose"] *)){
    list-style-type: upper-roman;
  }
  .article :where(ol[type="i" s]):not(:where([class~="not-prose"] *)){
    list-style-type: lower-roman;
  }
  .article :where(ol[type="1"]):not(:where([class~="not-prose"] *)){
    list-style-type: decimal;
  }
  .article :where(ul):not(:where([class~="not-prose"] *)){
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }
  .article :where(ol > li):not(:where([class~="not-prose"] *))::marker{
    font-weight: 400;
    color: var(--tw-prose-counters);
  }
  .article :where(ul > li):not(:where([class~="not-prose"] *))::marker{
    color: var(--tw-prose-bullets);
  }
  .article :where(hr):not(:where([class~="not-prose"] *)){
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .article :where(blockquote):not(:where([class~="not-prose"] *)){
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-left-width: 0.25rem;
    border-left-color: var(--tw-prose-quote-borders);
    quotes: "\201C""\201D""\2018""\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em;
  }
  .article :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before{
    content: open-quote;
  }
  .article :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after{
    content: close-quote;
  }
  .article :where(h1):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }
  .article :where(h1 strong):not(:where([class~="not-prose"] *)){
    font-weight: 900;
    color: inherit;
  }
  .article :where(h2):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }
  .article :where(h2 strong):not(:where([class~="not-prose"] *)){
    font-weight: 800;
    color: inherit;
  }
  .article :where(h3):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }
  .article :where(h3 strong):not(:where([class~="not-prose"] *)){
    font-weight: 700;
    color: inherit;
  }
  .article :where(h4):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }
  .article :where(h4 strong):not(:where([class~="not-prose"] *)){
    font-weight: 700;
    color: inherit;
  }
  .article :where(img):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .article :where(figure > *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
    margin-bottom: 0;
  }
  .article :where(figcaption):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }
  .article :where(code):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: 0.875em;
  }
  .article :where(code):not(:where([class~="not-prose"] *))::before{
    content: "`";
  }
  .article :where(code):not(:where([class~="not-prose"] *))::after{
    content: "`";
  }
  .article :where(a code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .article :where(h1 code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .article :where(h2 code):not(:where([class~="not-prose"] *)){
    color: inherit;
    font-size: 0.875em;
  }
  .article :where(h3 code):not(:where([class~="not-prose"] *)){
    color: inherit;
    font-size: 0.9em;
  }
  .article :where(h4 code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .article :where(blockquote code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .article :where(thead th code):not(:where([class~="not-prose"] *)){
    color: inherit;
  }
  .article :where(pre):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-right: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-left: 1.1428571em;
  }
  .article :where(pre code):not(:where([class~="not-prose"] *)){
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
  .article :where(pre code):not(:where([class~="not-prose"] *))::before{
    content: none;
  }
  .article :where(pre code):not(:where([class~="not-prose"] *))::after{
    content: none;
  }
  .article :where(table):not(:where([class~="not-prose"] *)){
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }
  .article :where(thead):not(:where([class~="not-prose"] *)){
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  .article :where(thead th):not(:where([class~="not-prose"] *)){
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }
  .article :where(tbody tr):not(:where([class~="not-prose"] *)){
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  .article :where(tbody tr:last-child):not(:where([class~="not-prose"] *)){
    border-bottom-width: 0;
  }
  .article :where(tbody td):not(:where([class~="not-prose"] *)){
    vertical-align: baseline;
  }
  .article :where(tfoot):not(:where([class~="not-prose"] *)){
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  .article :where(tfoot td):not(:where([class~="not-prose"] *)){
    vertical-align: top;
  }
  .article{
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75;
  }
  .article :where(p):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .article :where(video):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .article :where(figure):not(:where([class~="not-prose"] *)){
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .article :where(li):not(:where([class~="not-prose"] *)){
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .article :where(ol > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.375em;
  }
  .article :where(ul > li):not(:where([class~="not-prose"] *)){
    padding-left: 0.375em;
  }
  .article :where(.prose > ul > li p):not(:where([class~="not-prose"] *)){
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .article :where(.prose > ul > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
  }
  .article :where(.prose > ul > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.25em;
  }
  .article :where(.prose > ol > li > *:first-child):not(:where([class~="not-prose"] *)){
    margin-top: 1.25em;
  }
  .article :where(.prose > ol > li > *:last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 1.25em;
  }
  .article :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)){
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .article :where(hr + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .article :where(h2 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .article :where(h3 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .article :where(h4 + *):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .article :where(thead th:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .article :where(thead th:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .article :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)){
    padding-top: 0.5714286em;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }
  .article :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)){
    padding-left: 0;
  }
  .article :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)){
    padding-right: 0;
  }
  .article :where(.prose > :first-child):not(:where([class~="not-prose"] *)){
    margin-top: 0;
  }
  .article :where(.prose > :last-child):not(:where([class~="not-prose"] *)){
    margin-bottom: 0;
  }
  .article{
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 3rem;
    display: grid;
    justify-content: center;
    font-family: "IBMPlexSerif", Palatino, ui-serif;
    --tw-text-opacity: 1;
    color: rgba(20, 20, 20, var(--tw-text-opacity));
    color: rgb(var(--color-primary) / var(--tw-text-opacity));
  }
  .article p,
      .article ul,
      .article li{
    margin-bottom: 1rem;
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
  @media (min-width: 48em){
    .article img{
      margin-left: -2rem;
      margin-right: -2rem;
    }
  }
  @media (min-width: 64em){
    .article img{
      margin-left: -4rem;
      margin-right: -4rem;
    }
  }
  @media (min-width: 48em) {
    .article img {
        width: calc(100% + 4rem);
        max-width: 100vw
    }
  }
  @media (min-width: 64em) {
    .article img {
        width: calc(100% + 8rem)
    }
  }

  .swimlane {
    @apply grid snap-mandatory grid-flow-col snap-x w-full gap-4 scroll-px-6 px-6 pb-4 overflow-x-scroll justify-start;
  }
}

@layer utilities {
  .fadeIn {
    opacity: 0;
    animation: fadeInAnimation ease 500ms forwards;
  }

  /* .hiddenScroll {
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }
  } */

  .hiddenScroll {
    scrollbar-width: none;
  }
  .hiddenScroll::-webkit-scrollbar {
    display: none;
  }

  .absolute-center {
    @apply absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2;
  }

  /* .strike {
    position: relative;
    &::before {
      content: "";
      display: block;
      position: absolute;
      width: 108%;
      height: 1.5px;
      left: -4%;
      top: 50%;
      transform: translateY(-50%);
      background: rgb(var(--color-primary));
      box-shadow: 0.5px 0.5px 0px 0.5px rgb(var(--color-contrast));
    }
  } */

  .strike {
    position: relative;
  }
  .strike::before {
    content: '';
    display: block;
    position: absolute;
    width: 108%;
    height: 1.5px;
    left: -4%;
    top: 50%;
    transform: translateY(-50%);
    background: rgb(20, 20, 20);
    background: rgb(var(--color-primary));
    box-shadow: 0.5px 0.5px 0px 0.5px rgb(250, 250, 249);
    box-shadow: 0.5px 0.5px 0px 0.5px rgb(var(--color-contrast));
  }

  /* .card-image {
    @apply relative rounded overflow-clip flex justify-center items-center;
    &::before {
      content: " ";
      @apply z-10 absolute block top-0 left-0 w-full h-full shadow-border rounded;
    }
    img {
      @apply object-cover w-full aspect-[inherit];
    }
  } */

  .card-image{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: clip;
    border-radius: 0.25rem;
  }
  .card-image::before {
    content: ' ';
    position: absolute;
    top: 0px;
    left: 0px;
    z-index: 10;
    display: block;
    height: 100%;
    width: 100%;
    border-radius: 0.25rem;
    --tw-shadow: inset 0px 0px 0px 1px rgb(var(--color-primary) / 0.08);
    --tw-shadow-colored: inset 0px 0px 0px 1px var(--tw-shadow-color);
    box-shadow: 0 0 rgba(0,0,0,0), 0 0 rgba(0,0,0,0), var(--tw-shadow);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 rgba(0,0,0,0)), var(--tw-ring-shadow, 0 0 rgba(0,0,0,0)), var(--tw-shadow);
  }
  .card-image img{
    aspect-ratio: inherit;
    width: 100%;
    -o-object-fit: cover;
       object-fit: cover;
  }
}